name: E2E Playwright

on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

# Variables globales au job (evitent des 500 si ton code lit ces envs)
env:
  E2E_BASE_URL: ${{ vars.E2E_BASE_URL }}     # optionnel (URL staging)
  NEXT_TELEMETRY_DISABLED: "1"
  ENTITLEMENTS_JWT_SECRET: ci_secret
  SAT_JWT_SECRET: ci_secret
  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_dummy
  STRIPE_SECRET_KEY: sk_test_dummy

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install deps
        run: pnpm install --frozen-lockfile

      # Prisma: uniquement si un schéma existe
      - name: Prisma generate (if schema exists)
        if: ${{ hashFiles('prisma/schema.prisma') != '' }}
        env:
          PRISMA_SKIP_GENERATE: "0"
          DATABASE_URL: "file:./prisma/ci.db"
        run: pnpm prisma:generate

      - name: Build Next.js
        run: pnpm build

      - name: Install Playwright (browsers & deps)
        run: pnpm exec playwright install --with-deps

      # Si E2E_BASE_URL est défini, Playwright n'ouvre pas de serveur (webServer désactivé par config)
      # Sinon, il démarre 'pnpm start' via webServer (config).
      - name: Run E2E tests
        run: pnpm e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
