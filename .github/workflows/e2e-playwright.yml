name: E2E Playwright

on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  NEXT_TELEMETRY_DISABLED: "1"
  # Remplace ces “dummy” par des secrets si besoin :
  ENTITLEMENTS_JWT_SECRET: ci_secret
  SAT_JWT_SECRET: ci_secret
  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_dummy
  STRIPE_SECRET_KEY: sk_test_dummy

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4

      # 1) pnpm d’abord
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9
          run_install: false

      # 2) Node + cache pnpm
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Prisma generate (if schema exists)
        if: ${{ hashFiles('prisma/schema.prisma') != '' || hashFiles('exodus-app/prisma/schema.prisma') != '' }}
        env:
          PRISMA_SKIP_GENERATE: "0"
          DATABASE_URL: "file:./prisma/ci.db"
        run: pnpm prisma generate

      - name: Build Next.js
        run: pnpm build

      - name: Install Playwright (browsers & deps)
        run: pnpm exec playwright install --with-deps

      - name: Run E2E tests
        run: pnpm e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
