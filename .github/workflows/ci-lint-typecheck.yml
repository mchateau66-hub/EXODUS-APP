name: Lint & Typecheck
on:
  push: { branches: [main] }
  pull_request:

jobs:
  lint-typecheck:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Node (⚠️ pas de cache: pnpm ici)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # NE PAS mettre "cache: pnpm" ici, c'est ce qui casse !

      # 2) Activer Corepack & pnpm
      - name: Enable Corepack & pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate
          pnpm -v
          node -v
          # on fixe le chemin du store pour que le cache soit efficace
          pnpm config set store-dir ~/.pnpm-store

      # 3) Cache du store pnpm (ne dépend pas du binaire pnpm)
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpmstore-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpmstore-

      # 4) Install + vérifs
      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm exec prisma generate

      - name: ESLint
        run: pnpm exec eslint . --max-warnings=0

      - name: Typecheck
        run: pnpm exec tsc -p tsconfig.json --noEmit
