name: CI — E2E

on:
  pull_request:
    branches: [ main, staging ]
  workflow_dispatch:
    inputs:
      base_url:
        description: "Base URL à tester (override vars.E2E_BASE_URL)"
        required: false
        type: string
      use_session_cookie:
        description: "Injecter E2E_SESSION_COOKIE dans .env.e2e"
        required: false
        type: boolean
        default: false

concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  TZ: Europe/Paris

  # Repo/Org vars & secrets attendus (avec valeurs par défaut)
  E2E_BASE_URL: ${{ inputs.base_url || vars.E2E_BASE_URL || 'http://127.0.0.1:3000' }}
  E2E_WEBSERVER: ${{ vars.E2E_WEBSERVER || '1' }}              # "1" => lance Next local ; "0" => pointe vers E2E_BASE_URL
  E2E_SMOKE_PATH: ${{ vars.E2E_SMOKE_PATH || '/api/health' }}  # route de smoke
  E2E_PAYWALL_ALLOW_404_AS_BLOCK: ${{ vars.E2E_PAYWALL_ALLOW_404_AS_BLOCK || '0' }}
  E2E_SESSION_COOKIE: ${{ secrets.E2E_SESSION_COOKIE }}

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: '**/pnpm-lock.yaml'

      - name: Setup PNPM (standalone)
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9
          standalone: true
          run_install: false

      - name: Install deps & browsers
        run: |
          set -euxo pipefail
          pnpm install --no-frozen-lockfile
          pnpm exec playwright install --with-deps
        # Quand le lockfile est clean: remplace par --frozen-lockfile

      # Calcule la BASE à utiliser dans le job
      - name: Resolve base URL
        id: cfg
        shell: bash
        run: |
          if [ "${E2E_WEBSERVER}" = "1" ]; then
            echo "base=http://127.0.0.1:3000" >> "$GITHUB_OUTPUT"
          else
            echo "base=${E2E_BASE_URL}" >> "$GITHUB_OUTPUT"
          fi

      - name: Start Next.js (if E2E_WEBSERVER=1)
        if: ${{ env.E2E_WEBSERVER == '1' }}
        env:
          BASE: ${{ steps.cfg.outputs.base }}
        run: |
          set -euxo pipefail
          pnpm build
          pnpm start &                     # Next.js prod server on :3000
          # Attendre l'ouverture du port puis faire une smoke HTTP
          npx --yes wait-on -t 120000 "tcp:127.0.0.1:3000"
          code=$(curl -sk -o /dev/null -w "%{http_code}" "$BASE${E2E_SMOKE_PATH}" || true)
          echo "Smoke $BASE${E2E_SMOKE_PATH} -> HTTP $code"
          if [ "$code" = "200" ]; then
            exit 0
          elif [ "$code" = "404" ] && [ "${E2E_PAYWALL_ALLOW_404_AS_BLOCK}" = "1" ]; then
            echo "404 accepté comme blocage paywall"
            exit 0
          else
            echo "::error::Unexpected HTTP $code on $BASE${E2E_SMOKE_PATH}"
            exit 1
          fi

      - name: Prepare .env.e2e
        shell: bash
        env:
          BASE: ${{ steps.cfg.outputs.base }}
        run: |
          set -euxo pipefail
          {
            echo "E2E_BASE_URL=$BASE"
            echo "E2E_PAYWALL_ALLOW_404_AS_BLOCK=${E2E_PAYWALL_ALLOW_404_AS_BLOCK}"
            if [ "${{ inputs.use_session_cookie }}" = "true" ] && [ -n "${E2E_SESSION_COOKIE}" ]; then
              echo "E2E_SESSION_COOKIE=${E2E_SESSION_COOKIE}"
            fi
          } > .env.e2e
          # log (redacted)
          sed -n '1,200p' .env.e2e | sed 's/=.*$/=***redacted***)/' || true

      - name: Run Playwright
        env:
          E2E_BASE_URL: ${{ steps.cfg.outputs.base }}
          E2E_PAYWALL_ALLOW_404_AS_BLOCK: ${{ env.E2E_PAYWALL_ALLOW_404_AS_BLOCK }}
          E2E_SESSION_COOKIE: ${{ env.E2E_SESSION_COOKIE }}
        run: pnpm exec playwright test --reporter=github,html

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false

      - name: Upload test-results (traces/screenshots/videos)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
          retention-days: 7
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false
