name: CI – E2E

on:
  pull_request:
    branches: [ main, staging ]
  workflow_dispatch:
    inputs:
      base_url:
        description: "Base URL à tester (override vars.E2E_BASE_URL)"
        required: false
        type: string
      use_session_cookie:
        description: "Injector secrets.E2E_SESSION_COOKIE dans .env.e2e"
        required: false
        type: boolean
        default: false

concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  # Variables repo (Settings → Secrets and variables → Variables)
  E2E_BASE_URL: ${{ vars.E2E_BASE_URL || 'http://127.0.0.1:3000' }}
  E2E_WEBSERVER: ${{ vars.E2E_WEBSERVER || '1' }}          # 1 = lance Next local ; 0 = utilise BASE_URL tel quel
  E2E_SMOKE_PATH: ${{ vars.E2E_SMOKE_PATH || '/api/health/live' }}
  E2E_PAYWALL_ALLOW_404_AS_BLOCK: ${{ vars.E2E_PAYWALL_ALLOW_404_AS_BLOCK || '0' }}
  # Cache PNPM déterministe
  PNPM_STORE_PATH: .pnpm-store

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack & PNPM
        run: |
          set -euxo pipefail
          corepack enable
          corepack use pnpm@$(node -p "require('./package.json').packageManager.split('@')[1]")

      - name: Restore pnpm store cache
        uses: actions/cache@v4
        with:
          path: .pnpm-store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Install deps & browsers
        run: |
          set -euxo pipefail
          pnpm install --frozen-lockfile
          pnpm exec playwright install --with-deps

      - name: Resolve base URL
        id: cfg
        shell: bash
        run: |
          if [ "${{ env.E2E_WEBSERVER }}" = "1" ]; then
            BASE="http://127.0.0.1:3000"
          else
            BASE_INPUT="${{ github.event.inputs.base_url }}"
            BASE="${BASE_INPUT:-${{ env.E2E_BASE_URL }}}"
          fi
          echo "base=$BASE" >> "$GITHUB_OUTPUT"

      - name: Start Next.js (if E2E_WEBSERVER=1)
        if: env.E2E_WEBSERVER == '1'
        env:
          BASE: ${{ steps.cfg.outputs.base }}
        run: |
          set -euxo pipefail
          pnpm build
          pnpm start &>/tmp/next.log &
          npx --yes wait-on@latest "$BASE${{ env.E2E_SMOKE_PATH }}" -t 120000
          echo "Server up on $BASE"

      - name: Prepare .env.e2e
        shell: bash
        run: |
          echo "E2E_BASE_URL=${{ steps.cfg.outputs.base }}" > .env.e2e
          echo "E2E_PAYWALL_ALLOW_404_AS_BLOCK=${{ env.E2E_PAYWALL_ALLOW_404_AS_BLOCK }}" >> .env.e2e
          if [ "${{ github.event.inputs.use_session_cookie }}" = "true" ] && [ -n "${{ secrets.E2E_SESSION_COOKIE }}" ]; then
            echo "E2E_SESSION_COOKIE=${{ secrets.E2E_SESSION_COOKIE }}" >> .env.e2e
          fi
          printf "\n--- .env.e2e ---\n"; sed 's/=.*/=***redacted***/' .env.e2e || true

      - name: Sanity — list tests
        run: pnpm exec playwright test --list

      - name: Run Playwright
        run: pnpm exec playwright test --reporter=github,html

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7

      - name: Upload test-results (traces/screenshots/videos)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
          retention-days: 7
